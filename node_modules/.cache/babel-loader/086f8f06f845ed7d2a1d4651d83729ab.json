{"ast":null,"code":"var _jsxFileName = \"G:\\\\Projects\\\\React\\\\dave_grey_react\\\\learn_react_router\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"./Header\";\nimport Nav from \"./Nav\";\nimport Footer from \"./Footer\";\nimport Home from \"./Home\";\nimport NewPost from \"./NewPost\";\nimport PostPage from \"./PostPage\";\nimport About from \"./About\";\nimport Missing from \"./Missing\";\nimport EditPost from \"./EditPost\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { format } from \"date-fns\";\nimport api from \"./api/posts\";\nimport useWindowSize from \"./hooks/usWindowSize\";\nimport useAxiosFetch from \"./hooks/useAxiosFetch\";\nimport { DataProvider } from './context/DataContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // we don't need the below code since we'll be using a custom hook.\n  // useEffect(() => {\n  //   const fetchPosts = async () => {\n  //     try {\n  //       const response = await api.get(\"/posts\");\n  //       setPosts(response.data);\n  //     } catch (error) {\n  //       if (error.message) {\n  //         console.log(error.response.data);\n  //         console.log(error.response.status);\n  //         console.log(error.response.headers);\n  //       } else {\n  //         console.log(error.message);\n  //       }\n  //     }\n  //   };\n  //   fetchPosts();\n  // }, []);\n  useEffect(() => {\n    const filteredResults = posts.filter(post => post.body.toLowerCase().includes(search.toLowerCase()) || post.title.toLowerCase().includes(search.toLowerCase()));\n    setSearchResults(filteredResults.reverse());\n  }, [posts, search]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const id = posts.length ? posts[posts.length - 1].id + 1 : 1;\n    const datetime = format(new Date(), \"MMMM dd, yyyy pp\");\n    const newPost = {\n      id,\n      title: postTitle,\n      datetime,\n      body: postBody\n    };\n\n    try {\n      const response = await api.post(\"/posts\", newPost);\n      const allPosts = [...posts, response.data];\n      setPosts(allPosts);\n      setPostTitle(\"\");\n      setPostBody(\"\");\n      history.push(\"/\");\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const handleEdit = async id => {\n    try {\n      const datetime = format(new Date(), \"MMMM dd, yyyy pp\");\n      const updatedPost = {\n        id,\n        title: editTitle,\n        datetime,\n        body: editBody\n      };\n      const response = await api.put(`/posts/${id}`, updatedPost);\n      setPosts(posts.map(post => post.id === id ? { ...response.data\n      } : post));\n      setEditTitle(\"\");\n      setEditBody(\"\");\n      history.push(\"/\");\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const handleDelete = async id => {\n    try {\n      await api.delete(`/posts/${id}`);\n      const postsList = posts.filter(post => post.id !== id);\n      setPosts(postsList);\n      history.push(\"/\");\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(DataProvider, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        title: \"React JS Blog\",\n        width: width\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Nav, {\n        search: search,\n        setSearch: setSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Home, {\n            posts: searchResults,\n            fetchError: fetchError,\n            isLoading: isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/post\",\n          children: /*#__PURE__*/_jsxDEV(NewPost, {\n            handleSubmit: handleSubmit,\n            postTitle: postTitle,\n            setPostTitle: setPostTitle,\n            postBody: postBody,\n            setPostBody: setPostBody\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/post/:id\",\n          children: /*#__PURE__*/_jsxDEV(PostPage, {\n            posts: posts,\n            handleDelete: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/post/edit/:id\",\n          children: /*#__PURE__*/_jsxDEV(EditPost, {\n            posts: posts,\n            setEditTitle: setEditTitle,\n            setEditBody: setEditBody,\n            editBody: editBody,\n            editTitle: editTitle,\n            handleEdit: handleEdit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          component: About\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          component: Missing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["G:/Projects/React/dave_grey_react/learn_react_router/src/App.js"],"names":["Header","Nav","Footer","Home","NewPost","PostPage","About","Missing","EditPost","Route","Switch","useHistory","useState","useEffect","format","api","useWindowSize","useAxiosFetch","DataProvider","App","filteredResults","posts","filter","post","body","toLowerCase","includes","search","title","setSearchResults","reverse","handleSubmit","e","preventDefault","id","length","datetime","Date","newPost","postTitle","postBody","response","allPosts","data","setPosts","setPostTitle","setPostBody","history","push","error","console","log","message","handleEdit","updatedPost","editTitle","editBody","put","map","setEditTitle","setEditBody","handleDelete","delete","postsList","width","setSearch","searchResults","fetchError","isLoading"],"mappings":"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","sourcesContent":["import Header from \"./Header\";\r\nimport Nav from \"./Nav\";\r\nimport Footer from \"./Footer\";\r\nimport Home from \"./Home\";\r\nimport NewPost from \"./NewPost\";\r\nimport PostPage from \"./PostPage\";\r\nimport About from \"./About\";\r\nimport Missing from \"./Missing\";\r\nimport EditPost from \"./EditPost\";\r\nimport { Route, Switch, useHistory } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport api from \"./api/posts\";\r\nimport useWindowSize from \"./hooks/usWindowSize\";\r\nimport useAxiosFetch from \"./hooks/useAxiosFetch\";\r\nimport {DataProvider} from './context/DataContext'\r\n\r\nfunction App() {\r\n \r\n  // we don't need the below code since we'll be using a custom hook.\r\n  // useEffect(() => {\r\n  //   const fetchPosts = async () => {\r\n  //     try {\r\n  //       const response = await api.get(\"/posts\");\r\n  //       setPosts(response.data);\r\n  //     } catch (error) {\r\n  //       if (error.message) {\r\n  //         console.log(error.response.data);\r\n  //         console.log(error.response.status);\r\n  //         console.log(error.response.headers);\r\n  //       } else {\r\n  //         console.log(error.message);\r\n  //       }\r\n  //     }\r\n  //   };\r\n  //   fetchPosts();\r\n  // }, []);\r\n  useEffect(() => {\r\n    const filteredResults = posts.filter(\r\n      (post) =>\r\n        post.body.toLowerCase().includes(search.toLowerCase()) ||\r\n        post.title.toLowerCase().includes(search.toLowerCase())\r\n    );\r\n\r\n    setSearchResults(filteredResults.reverse());\r\n  }, [posts, search]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const id = posts.length ? posts[posts.length - 1].id + 1 : 1;\r\n    const datetime = format(new Date(), \"MMMM dd, yyyy pp\");\r\n    const newPost = { id, title: postTitle, datetime, body: postBody };\r\n    try {\r\n      const response = await api.post(\"/posts\", newPost);\r\n      const allPosts = [...posts, response.data];\r\n      setPosts(allPosts);\r\n      setPostTitle(\"\");\r\n      setPostBody(\"\");\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  const handleEdit = async (id) => {\r\n    try {\r\n      const datetime = format(new Date(), \"MMMM dd, yyyy pp\");\r\n      const updatedPost = { id, title: editTitle, datetime, body: editBody };\r\n\r\n      const response = await api.put(`/posts/${id}`, updatedPost);\r\n      setPosts(\r\n        posts.map((post) => (post.id === id ? { ...response.data } : post))\r\n      );\r\n      setEditTitle(\"\");\r\n      setEditBody(\"\");\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await api.delete(`/posts/${id}`);\r\n      const postsList = posts.filter((post) => post.id !== id);\r\n      setPosts(postsList);\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <DataProvider>\r\n      <Header title=\"React JS Blog\" width={width}/>\r\n      <Nav search={search} setSearch={setSearch} />\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Home posts={searchResults}\r\n          fetchError={fetchError}\r\n          isLoading={isLoading}\r\n          />\r\n        </Route>\r\n        <Route exact path=\"/post\">\r\n          <NewPost\r\n            handleSubmit={handleSubmit}\r\n            postTitle={postTitle}\r\n            setPostTitle={setPostTitle}\r\n            postBody={postBody}\r\n            setPostBody={setPostBody}\r\n          />\r\n        </Route>\r\n        <Route exact path=\"/post/:id\">\r\n          <PostPage posts={posts} handleDelete={handleDelete} />\r\n        </Route>\r\n        <Route exact path=\"/post/edit/:id\">\r\n          <EditPost\r\n            posts={posts}\r\n            setEditTitle={setEditTitle}\r\n            setEditBody={setEditBody}\r\n            editBody={editBody}\r\n            editTitle={editTitle}\r\n            handleEdit={handleEdit}\r\n          ></EditPost>\r\n        </Route>\r\n        <Route path=\"/about\" component={About} />\r\n        <Route path=\"*\" component={Missing} />\r\n      </Switch>\r\n      </DataProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}