{"ast":null,"code":"var _jsxFileName = \"G:\\\\Projects\\\\React\\\\dave_grey_react\\\\learn_react_router\\\\src\\\\EditPost.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditPost = ({\n  handleEdit,\n  setEditTitle,\n  setEditBody,\n  posts\n}) => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const post = posts.find(post => post.id.toString() === id);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"NewPost\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"newPostForm\",\n      onSubmit: handleEdit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postTitle\",\n        children: \"Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"postTitle\",\n        type: \"text\",\n        required: true,\n        value: post.title,\n        onChange: e => setEditTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postBody\",\n        children: \"Post:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"postBody\",\n        required: true,\n        value: post.body,\n        onChange: e => setEditBody(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), \"}    \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditPost, \"r5uZNI/QgQLJ6YUN+rmQ/OIgZ/k=\", false, function () {\n  return [useParams];\n});\n\n_c = EditPost;\nexport default EditPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"sources":["G:/Projects/React/dave_grey_react/learn_react_router/src/EditPost.js"],"names":["useParams","EditPost","handleEdit","setEditTitle","setEditBody","posts","id","post","find","toString","title","e","target","value","body"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,kBAA1B;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AACdC,EAAAA,UADc;AACFC,EAAAA,YADE;AACYC,EAAAA,WADZ;AACyBC,EAAAA;AADzB,CAAD,KAEX;AAAA;;AAEF,QAAM;AAACC,IAAAA;AAAD,MAAON,SAAS,EAAtB;AACA,QAAMO,IAAI,GAAGF,KAAK,CAACG,IAAN,CAAWD,IAAI,IAAKA,IAAI,CAACD,EAAN,CAAUG,QAAV,OAAyBH,EAA5C,CAAb;AACA,sBAEI;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,SAAS,EAAC,aAAhB;AAA8B,MAAA,QAAQ,EAAEJ,UAAxC;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,EAAE,EAAC,WADP;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,QAAQ,MAHZ;AAII,QAAA,KAAK,EAAEK,IAAI,CAACG,KAJhB;AAKI,QAAA,QAAQ,EAAGC,CAAD,IAAOR,YAAY,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV;AALjC;AAAA;AAAA;AAAA;AAAA,cAFJ,eASI;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,eAUI;AACI,QAAA,EAAE,EAAC,UADP;AAEI,QAAA,QAAQ,MAFZ;AAGI,QAAA,KAAK,EAAEN,IAAI,CAACO,IAHhB;AAII,QAAA,QAAQ,EAAGH,CAAD,IAAOP,WAAW,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV;AAJhC;AAAA;AAAA;AAAA;AAAA,cAVJ,eAgBI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAyBH,CA/BD;;GAAMZ,Q;UAIWD,S;;;KAJXC,Q;AAiCN,eAAeA,QAAf","sourcesContent":["import { useParams } from \"react-router-dom\"\r\n\r\nconst EditPost = ({\r\n    handleEdit, setEditTitle, setEditBody, posts\r\n}) => {\r\n\r\n    const {id} = useParams();\r\n    const post = posts.find(post => (post.id).toString() === id );\r\n    return (\r\n         \r\n        <main className=\"NewPost\">\r\n            <h2>New Post</h2>\r\n            <form className=\"newPostForm\" onSubmit={handleEdit}>\r\n                <label htmlFor=\"postTitle\">Title:</label>\r\n                <input\r\n                    id=\"postTitle\"\r\n                    type=\"text\"\r\n                    required\r\n                    value={post.title}\r\n                    onChange={(e) => setEditTitle(e.target.value)}\r\n                />\r\n                <label htmlFor=\"postBody\">Post:</label>\r\n                <textarea\r\n                    id=\"postBody\"\r\n                    required\r\n                    value={post.body}\r\n                    onChange={(e) => setEditBody(e.target.value)}\r\n                />\r\n                <button type=\"submit\">Submit</button>\r\n            </form>\r\n        \r\n            }    </main>\r\n    )\r\n}\r\n\r\nexport default EditPost\r\n"]},"metadata":{},"sourceType":"module"}