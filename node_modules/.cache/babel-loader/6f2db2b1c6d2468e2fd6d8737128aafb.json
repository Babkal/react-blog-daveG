{"ast":null,"code":"var _jsxFileName = \"G:\\\\Projects\\\\React\\\\dave_grey_react\\\\learn_react_router\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"./Header\";\nimport Nav from \"./Nav\";\nimport Footer from \"./Footer\";\nimport Home from \"./Home\";\nimport NewPost from \"./NewPost\";\nimport PostPage from \"./PostPage\";\nimport About from \"./About\";\nimport Missing from \"./Missing\";\nimport EditPost from \"./EditPost\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { format } from \"date-fns\";\nimport api from \"./api/posts\";\nimport useWindowSize from \"./hooks/usWindowSize\";\nimport useAxiosFetch from \"./hooks/useAxiosFetch\";\nimport { DataProvider } from './context/DataContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [postTitle, setPostTitle] = useState(\"\");\n  const [postBody, setPostBody] = useState(\"\");\n  const [editTitle, setEditTitle] = useState(\"\");\n  const [editBody, setEditBody] = useState(\"\");\n  const history = useHistory();\n  const {\n    width\n  } = useWindowSize();\n  const {\n    data,\n    fetchError,\n    isLoading\n  } = useAxiosFetch('http://localhost:3001/posts');\n  useEffect(() => {\n    setPosts(data);\n  }, [data]); // we don't need the below code since we'll be using a custom hook.\n  // useEffect(() => {\n  //   const fetchPosts = async () => {\n  //     try {\n  //       const response = await api.get(\"/posts\");\n  //       setPosts(response.data);\n  //     } catch (error) {\n  //       if (error.message) {\n  //         console.log(error.response.data);\n  //         console.log(error.response.status);\n  //         console.log(error.response.headers);\n  //       } else {\n  //         console.log(error.message);\n  //       }\n  //     }\n  //   };\n  //   fetchPosts();\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(DataProvider, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        title: \"React JS Blog\",\n        width: width\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Nav, {\n        search: search,\n        setSearch: setSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Home, {\n            posts: searchResults,\n            fetchError: fetchError,\n            isLoading: isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/post\",\n          children: /*#__PURE__*/_jsxDEV(NewPost, {\n            handleSubmit: handleSubmit,\n            postTitle: postTitle,\n            setPostTitle: setPostTitle,\n            postBody: postBody,\n            setPostBody: setPostBody\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/post/:id\",\n          children: /*#__PURE__*/_jsxDEV(PostPage, {\n            posts: posts,\n            handleDelete: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/post/edit/:id\",\n          children: /*#__PURE__*/_jsxDEV(EditPost, {\n            posts: posts,\n            setEditTitle: setEditTitle,\n            setEditBody: setEditBody,\n            editBody: editBody,\n            editTitle: editTitle,\n            handleEdit: handleEdit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          component: About\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          component: Missing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"iKISEJYmfBSsLHG+RZK5kiQOssI=\", false, function () {\n  return [useHistory, useWindowSize, useAxiosFetch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["G:/Projects/React/dave_grey_react/learn_react_router/src/App.js"],"names":["Header","Nav","Footer","Home","NewPost","PostPage","About","Missing","EditPost","Route","Switch","useHistory","useState","useEffect","format","api","useWindowSize","useAxiosFetch","DataProvider","App","posts","setPosts","search","setSearch","searchResults","setSearchResults","postTitle","setPostTitle","postBody","setPostBody","editTitle","setEditTitle","editBody","setEditBody","history","width","data","fetchError","isLoading","handleSubmit","handleDelete","handleEdit"],"mappings":"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","sourcesContent":["import Header from \"./Header\";\r\nimport Nav from \"./Nav\";\r\nimport Footer from \"./Footer\";\r\nimport Home from \"./Home\";\r\nimport NewPost from \"./NewPost\";\r\nimport PostPage from \"./PostPage\";\r\nimport About from \"./About\";\r\nimport Missing from \"./Missing\";\r\nimport EditPost from \"./EditPost\";\r\nimport { Route, Switch, useHistory } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport api from \"./api/posts\";\r\nimport useWindowSize from \"./hooks/usWindowSize\";\r\nimport useAxiosFetch from \"./hooks/useAxiosFetch\";\r\nimport {DataProvider} from './context/DataContext'\r\n\r\nfunction App() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [postTitle, setPostTitle] = useState(\"\");\r\n  const [postBody, setPostBody] = useState(\"\");\r\n  const [editTitle, setEditTitle] = useState(\"\");\r\n  const [editBody, setEditBody] = useState(\"\");\r\n  const history = useHistory();\r\n  const { width } = useWindowSize();\r\n\r\n  const {data, fetchError, isLoading} = useAxiosFetch('http://localhost:3001/posts');\r\n\r\n  useEffect(()=>{\r\n    setPosts(data)\r\n  }, [data])\r\n  // we don't need the below code since we'll be using a custom hook.\r\n  // useEffect(() => {\r\n  //   const fetchPosts = async () => {\r\n  //     try {\r\n  //       const response = await api.get(\"/posts\");\r\n  //       setPosts(response.data);\r\n  //     } catch (error) {\r\n  //       if (error.message) {\r\n  //         console.log(error.response.data);\r\n  //         console.log(error.response.status);\r\n  //         console.log(error.response.headers);\r\n  //       } else {\r\n  //         console.log(error.message);\r\n  //       }\r\n  //     }\r\n  //   };\r\n  //   fetchPosts();\r\n  // }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <DataProvider>\r\n      <Header title=\"React JS Blog\" width={width}/>\r\n      <Nav search={search} setSearch={setSearch} />\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Home posts={searchResults}\r\n          fetchError={fetchError}\r\n          isLoading={isLoading}\r\n          />\r\n        </Route>\r\n        <Route exact path=\"/post\">\r\n          <NewPost\r\n            handleSubmit={handleSubmit}\r\n            postTitle={postTitle}\r\n            setPostTitle={setPostTitle}\r\n            postBody={postBody}\r\n            setPostBody={setPostBody}\r\n          />\r\n        </Route>\r\n        <Route exact path=\"/post/:id\">\r\n          <PostPage posts={posts} handleDelete={handleDelete} />\r\n        </Route>\r\n        <Route exact path=\"/post/edit/:id\">\r\n          <EditPost\r\n            posts={posts}\r\n            setEditTitle={setEditTitle}\r\n            setEditBody={setEditBody}\r\n            editBody={editBody}\r\n            editTitle={editTitle}\r\n            handleEdit={handleEdit}\r\n          ></EditPost>\r\n        </Route>\r\n        <Route path=\"/about\" component={About} />\r\n        <Route path=\"*\" component={Missing} />\r\n      </Switch>\r\n      </DataProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}