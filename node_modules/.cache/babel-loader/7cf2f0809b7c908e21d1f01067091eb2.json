{"ast":null,"code":"var _jsxFileName = \"G:\\\\Projects\\\\React\\\\dave_grey_react\\\\learn_react_router\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"./Header\";\nimport Nav from \"./Nav\";\nimport Footer from \"./Footer\";\nimport Home from \"./Home\";\nimport NewPost from \"./NewPost\";\nimport PostPage from \"./PostPage\";\nimport About from \"./About\";\nimport Missing from \"./Missing\";\nimport EditPost from \"./EditPost\";\nimport { DataProvider } from './context/DataContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [postTitle, setPostTitle] = useState(\"\");\n  const [postBody, setPostBody] = useState(\"\");\n  const [editTitle, setEditTitle] = useState(\"\");\n  const [editBody, setEditBody] = useState(\"\");\n  const history = useHistory();\n  const {\n    width\n  } = useWindowSize();\n  const {\n    data,\n    fetchError,\n    isLoading\n  } = useAxiosFetch('http://localhost:3001/posts');\n  useEffect(() => {\n    setPosts(data);\n  }, [data]); // we don't need the below code since we'll be using a custom hook.\n  // useEffect(() => {\n  //   const fetchPosts = async () => {\n  //     try {\n  //       const response = await api.get(\"/posts\");\n  //       setPosts(response.data);\n  //     } catch (error) {\n  //       if (error.message) {\n  //         console.log(error.response.data);\n  //         console.log(error.response.status);\n  //         console.log(error.response.headers);\n  //       } else {\n  //         console.log(error.message);\n  //       }\n  //     }\n  //   };\n  //   fetchPosts();\n  // }, []);\n\n  useEffect(() => {\n    const filteredResults = posts.filter(post => post.body.toLowerCase().includes(search.toLowerCase()) || post.title.toLowerCase().includes(search.toLowerCase()));\n    setSearchResults(filteredResults.reverse());\n  }, [posts, search]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const id = posts.length ? posts[posts.length - 1].id + 1 : 1;\n    const datetime = format(new Date(), \"MMMM dd, yyyy pp\");\n    const newPost = {\n      id,\n      title: postTitle,\n      datetime,\n      body: postBody\n    };\n\n    try {\n      const response = await api.post(\"/posts\", newPost);\n      const allPosts = [...posts, response.data];\n      setPosts(allPosts);\n      setPostTitle(\"\");\n      setPostBody(\"\");\n      history.push(\"/\");\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const handleEdit = async id => {\n    try {\n      const datetime = format(new Date(), \"MMMM dd, yyyy pp\");\n      const updatedPost = {\n        id,\n        title: editTitle,\n        datetime,\n        body: editBody\n      };\n      const response = await api.put(`/posts/${id}`, updatedPost);\n      setPosts(posts.map(post => post.id === id ? { ...response.data\n      } : post));\n      setEditTitle(\"\");\n      setEditBody(\"\");\n      history.push(\"/\");\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const handleDelete = async id => {\n    try {\n      await api.delete(`/posts/${id}`);\n      const postsList = posts.filter(post => post.id !== id);\n      setPosts(postsList);\n      history.push(\"/\");\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(DataProvider, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        title: \"React JS Blog\",\n        width: width\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Nav, {\n        search: search,\n        setSearch: setSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Home, {\n            posts: searchResults,\n            fetchError: fetchError,\n            isLoading: isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/post\",\n          children: /*#__PURE__*/_jsxDEV(NewPost, {\n            handleSubmit: handleSubmit,\n            postTitle: postTitle,\n            setPostTitle: setPostTitle,\n            postBody: postBody,\n            setPostBody: setPostBody\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/post/:id\",\n          children: /*#__PURE__*/_jsxDEV(PostPage, {\n            posts: posts,\n            handleDelete: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/post/edit/:id\",\n          children: /*#__PURE__*/_jsxDEV(EditPost, {\n            posts: posts,\n            setEditTitle: setEditTitle,\n            setEditBody: setEditBody,\n            editBody: editBody,\n            editTitle: editTitle,\n            handleEdit: handleEdit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          component: About\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          component: Missing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Qbbg1Q1hDK17qawLXo6rhKKaGtE=\", true);\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["G:/Projects/React/dave_grey_react/learn_react_router/src/App.js"],"names":["Header","Nav","Footer","Home","NewPost","PostPage","About","Missing","EditPost","DataProvider","App","posts","setPosts","useState","search","setSearch","searchResults","setSearchResults","postTitle","setPostTitle","postBody","setPostBody","editTitle","setEditTitle","editBody","setEditBody","history","useHistory","width","useWindowSize","data","fetchError","isLoading","useAxiosFetch","useEffect","filteredResults","filter","post","body","toLowerCase","includes","title","reverse","handleSubmit","e","preventDefault","id","length","datetime","format","Date","newPost","response","api","allPosts","push","error","console","log","message","handleEdit","updatedPost","put","map","handleDelete","delete","postsList"],"mappings":"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","sourcesContent":["import Header from \"./Header\";\r\nimport Nav from \"./Nav\";\r\nimport Footer from \"./Footer\";\r\nimport Home from \"./Home\";\r\nimport NewPost from \"./NewPost\";\r\nimport PostPage from \"./PostPage\";\r\nimport About from \"./About\";\r\nimport Missing from \"./Missing\";\r\nimport EditPost from \"./EditPost\";\r\n\r\nimport {DataProvider} from './context/DataContext'\r\n\r\nfunction App() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [postTitle, setPostTitle] = useState(\"\");\r\n  const [postBody, setPostBody] = useState(\"\");\r\n  const [editTitle, setEditTitle] = useState(\"\");\r\n  const [editBody, setEditBody] = useState(\"\");\r\n  const history = useHistory();\r\n  const { width } = useWindowSize();\r\n\r\n  const {data, fetchError, isLoading} = useAxiosFetch('http://localhost:3001/posts');\r\n\r\n  useEffect(()=>{\r\n    setPosts(data)\r\n  }, [data])\r\n  // we don't need the below code since we'll be using a custom hook.\r\n  // useEffect(() => {\r\n  //   const fetchPosts = async () => {\r\n  //     try {\r\n  //       const response = await api.get(\"/posts\");\r\n  //       setPosts(response.data);\r\n  //     } catch (error) {\r\n  //       if (error.message) {\r\n  //         console.log(error.response.data);\r\n  //         console.log(error.response.status);\r\n  //         console.log(error.response.headers);\r\n  //       } else {\r\n  //         console.log(error.message);\r\n  //       }\r\n  //     }\r\n  //   };\r\n  //   fetchPosts();\r\n  // }, []);\r\n  useEffect(() => {\r\n    const filteredResults = posts.filter(\r\n      (post) =>\r\n        post.body.toLowerCase().includes(search.toLowerCase()) ||\r\n        post.title.toLowerCase().includes(search.toLowerCase())\r\n    );\r\n\r\n    setSearchResults(filteredResults.reverse());\r\n  }, [posts, search]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const id = posts.length ? posts[posts.length - 1].id + 1 : 1;\r\n    const datetime = format(new Date(), \"MMMM dd, yyyy pp\");\r\n    const newPost = { id, title: postTitle, datetime, body: postBody };\r\n    try {\r\n      const response = await api.post(\"/posts\", newPost);\r\n      const allPosts = [...posts, response.data];\r\n      setPosts(allPosts);\r\n      setPostTitle(\"\");\r\n      setPostBody(\"\");\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  const handleEdit = async (id) => {\r\n    try {\r\n      const datetime = format(new Date(), \"MMMM dd, yyyy pp\");\r\n      const updatedPost = { id, title: editTitle, datetime, body: editBody };\r\n\r\n      const response = await api.put(`/posts/${id}`, updatedPost);\r\n      setPosts(\r\n        posts.map((post) => (post.id === id ? { ...response.data } : post))\r\n      );\r\n      setEditTitle(\"\");\r\n      setEditBody(\"\");\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await api.delete(`/posts/${id}`);\r\n      const postsList = posts.filter((post) => post.id !== id);\r\n      setPosts(postsList);\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <DataProvider>\r\n      <Header title=\"React JS Blog\" width={width}/>\r\n      <Nav search={search} setSearch={setSearch} />\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Home posts={searchResults}\r\n          fetchError={fetchError}\r\n          isLoading={isLoading}\r\n          />\r\n        </Route>\r\n        <Route exact path=\"/post\">\r\n          <NewPost\r\n            handleSubmit={handleSubmit}\r\n            postTitle={postTitle}\r\n            setPostTitle={setPostTitle}\r\n            postBody={postBody}\r\n            setPostBody={setPostBody}\r\n          />\r\n        </Route>\r\n        <Route exact path=\"/post/:id\">\r\n          <PostPage posts={posts} handleDelete={handleDelete} />\r\n        </Route>\r\n        <Route exact path=\"/post/edit/:id\">\r\n          <EditPost\r\n            posts={posts}\r\n            setEditTitle={setEditTitle}\r\n            setEditBody={setEditBody}\r\n            editBody={editBody}\r\n            editTitle={editTitle}\r\n            handleEdit={handleEdit}\r\n          ></EditPost>\r\n        </Route>\r\n        <Route path=\"/about\" component={About} />\r\n        <Route path=\"*\" component={Missing} />\r\n      </Switch>\r\n      </DataProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}