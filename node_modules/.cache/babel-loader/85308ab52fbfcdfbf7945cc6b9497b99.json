{"ast":null,"code":"var _jsxFileName = \"G:\\\\Projects\\\\React\\\\dave_grey_react\\\\learn_react_router\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"./Header\";\nimport Nav from \"./Nav\";\nimport Footer from \"./Footer\";\nimport Home from \"./Home\";\nimport NewPost from \"./NewPost\";\nimport PostPage from \"./PostPage\";\nimport About from \"./About\";\nimport Missing from \"./Missing\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { format } from \"date-fns\";\nimport api from \"./api/posts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [postTitle, setPostTitle] = useState(\"\");\n  const [postBody, setPostBody] = useState(\"\");\n  const [editTitle, setEditTitle] = useState('');\n  const [editBody, setEditBody] = useState('');\n  const history = useHistory();\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await api.get(\"/posts\");\n        setPosts(response.data);\n      } catch (error) {\n        if (error.message) {\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        } else {\n          console.log(error.message);\n        }\n      }\n    };\n\n    fetchPosts();\n  }, []);\n  useEffect(() => {\n    const filteredResults = posts.filter(post => post.body.toLowerCase().includes(search.toLowerCase()) || post.title.toLowerCase().includes(search.toLowerCase()));\n    setSearchResults(filteredResults.reverse());\n  }, [posts, search]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const id = posts.length ? posts[posts.length - 1].id + 1 : 1;\n    const datetime = format(new Date(), \"MMMM dd, yyyy pp\");\n    const newPost = {\n      id,\n      title: postTitle,\n      datetime,\n      body: postBody\n    };\n\n    try {\n      const response = await api.post(\"/posts\", newPost);\n      const allPosts = [...posts, response.data];\n      setPosts(allPosts);\n      setPostTitle(\"\");\n      setPostBody(\"\");\n      history.push(\"/\");\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const handleEdit = async id => {\n    try {\n      const datetime = format(new Date(), \"MMMM dd, yyyy pp\");\n      const updatedPost = {\n        id,\n        title: editTitle,\n        datetime,\n        body: editBody\n      };\n      const response = await api.put(`/posts/${id}`, updatedPost);\n      set;\n      history.push('/');\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const handleDelete = async id => {\n    try {\n      await api.delete(`/posts/${id}`);\n      const postsList = posts.filter(post => post.id !== id);\n      setPosts(postsList);\n      history.push(\"/\");\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"React JS Blog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Nav, {\n      search: search,\n      setSearch: setSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Home, {\n          posts: searchResults\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/post\",\n        children: /*#__PURE__*/_jsxDEV(NewPost, {\n          handleSubmit: handleSubmit,\n          postTitle: postTitle,\n          setPostTitle: setPostTitle,\n          postBody: postBody,\n          setPostBody: setPostBody\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/post/:id\",\n        children: /*#__PURE__*/_jsxDEV(PostPage, {\n          posts: posts,\n          handleDelete: handleDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        component: About\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        component: Missing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"bV4zPhRTqBau+/qUlnydihcCu3M=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["G:/Projects/React/dave_grey_react/learn_react_router/src/App.js"],"names":["Header","Nav","Footer","Home","NewPost","PostPage","About","Missing","Route","Switch","useHistory","useState","useEffect","format","api","App","posts","setPosts","search","setSearch","searchResults","setSearchResults","postTitle","setPostTitle","postBody","setPostBody","editTitle","setEditTitle","editBody","setEditBody","history","fetchPosts","response","get","data","error","message","console","log","status","headers","filteredResults","filter","post","body","toLowerCase","includes","title","reverse","handleSubmit","e","preventDefault","id","length","datetime","Date","newPost","allPosts","push","handleEdit","updatedPost","put","set","handleDelete","delete","postsList"],"mappings":"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","sourcesContent":["import Header from \"./Header\";\r\nimport Nav from \"./Nav\";\r\nimport Footer from \"./Footer\";\r\nimport Home from \"./Home\";\r\nimport NewPost from \"./NewPost\";\r\nimport PostPage from \"./PostPage\";\r\nimport About from \"./About\";\r\nimport Missing from \"./Missing\";\r\nimport { Route, Switch, useHistory } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport api from \"./api/posts\";\r\n\r\nfunction App() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [postTitle, setPostTitle] = useState(\"\");\r\n  const [postBody, setPostBody] = useState(\"\");\r\n  const [editTitle, setEditTitle] = useState('');\r\n  const [editBody, setEditBody] = useState('')\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      try {\r\n        const response = await api.get(\"/posts\");\r\n        setPosts(response.data);\r\n      } catch (error) {\r\n        if (error.message) {\r\n          console.log(error.response.data);\r\n          console.log(error.response.status);\r\n          console.log(error.response.headers);\r\n        } else {\r\n          console.log(error.message);\r\n        }\r\n      }\r\n    };\r\n    fetchPosts();\r\n  }, []);\r\n  useEffect(() => {\r\n    const filteredResults = posts.filter(\r\n      (post) =>\r\n        post.body.toLowerCase().includes(search.toLowerCase()) ||\r\n        post.title.toLowerCase().includes(search.toLowerCase())\r\n    );\r\n\r\n    setSearchResults(filteredResults.reverse());\r\n  }, [posts, search]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const id = posts.length ? posts[posts.length - 1].id + 1 : 1;\r\n    const datetime = format(new Date(), \"MMMM dd, yyyy pp\");\r\n    const newPost = { id, title: postTitle, datetime, body: postBody };\r\n    try {\r\n      const response = await api.post(\"/posts\", newPost);\r\n      const allPosts = [...posts, response.data];\r\n      setPosts(allPosts);\r\n      setPostTitle(\"\");\r\n      setPostBody(\"\");\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  const handleEdit = async (id) => {\r\n    try {\r\n      const datetime = format(new Date(), \"MMMM dd, yyyy pp\");\r\n      const updatedPost = { id, title: editTitle, datetime, body: editBody };\r\n\r\n     const response = await api.put(`/posts/${id}`, updatedPost);\r\n     set\r\n      history.push('/');\r\n    } catch (error) {\r\n      console.log(error.message);\r\n      \r\n    }\r\n  }\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await api.delete(`/posts/${id}`)\r\n      const postsList = posts.filter((post) => post.id !== id);\r\n      setPosts(postsList);\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header title=\"React JS Blog\" />\r\n      <Nav search={search} setSearch={setSearch} />\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Home posts={searchResults} />\r\n        </Route>\r\n        <Route exact path=\"/post\">\r\n          <NewPost\r\n            handleSubmit={handleSubmit}\r\n            postTitle={postTitle}\r\n            setPostTitle={setPostTitle}\r\n            postBody={postBody}\r\n            setPostBody={setPostBody}\r\n          />\r\n        </Route>\r\n        <Route path=\"/post/:id\">\r\n          <PostPage posts={posts} handleDelete={handleDelete} />\r\n        </Route>\r\n        <Route path=\"/about\" component={About} />\r\n        <Route path=\"*\" component={Missing} />\r\n      </Switch>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}