{"ast":null,"code":"var _jsxFileName = \"G:\\\\Projects\\\\React\\\\dave_grey_react\\\\learn_react_router\\\\src\\\\EditPost.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EditPost = ({\n  handleEdit,\n  setEditTitle,\n  setEditBody,\n  posts,\n  edit\n}) => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const post = posts.find(post => post.id.toString() === id);\n  useEffect(() => {\n    if (post) {\n      setEditTitle(post.title);\n      setEditBody(post.body);\n    }\n  }, [post, setEditTitle, setEditBody]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"NewPost\",\n    children: [post && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"newPostForm\",\n        onSubmit: handleEdit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postTitle\",\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postTitle\",\n          type: \"text\",\n          required: true,\n          value: post.title,\n          onChange: e => setEditTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postBody\",\n          children: \"Post:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"postBody\",\n          required: true,\n          value: post.body,\n          onChange: e => setEditBody(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), !post && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Post Not Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Well, that's disappointing.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Visit Our Homepage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true), \"    \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditPost, \"WTkzVJt056/9vEFrj9nX40yNcDw=\", false, function () {\n  return [useParams];\n});\n\n_c = EditPost;\nexport default EditPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"sources":["G:/Projects/React/dave_grey_react/learn_react_router/src/EditPost.js"],"names":["useEffect","useParams","Link","EditPost","handleEdit","setEditTitle","setEditBody","posts","edit","id","post","find","toString","title","body","e","target","value"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,IAAT,QAAqB,kBAArB;;;;AAGA,MAAMC,QAAQ,GAAG,CAAC;AACdC,EAAAA,UADc;AACFC,EAAAA,YADE;AACYC,EAAAA,WADZ;AACyBC,EAAAA,KADzB;AACgCC,EAAAA;AADhC,CAAD,KAEX;AAAA;;AAEF,QAAM;AAACC,IAAAA;AAAD,MAAOR,SAAS,EAAtB;AACA,QAAMS,IAAI,GAAGH,KAAK,CAACI,IAAN,CAAWD,IAAI,IAAKA,IAAI,CAACD,EAAN,CAAUG,QAAV,OAAyBH,EAA5C,CAAb;AAEDT,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIU,IAAJ,EAAU;AACNL,MAAAA,YAAY,CAACK,IAAI,CAACG,KAAN,CAAZ;AACAP,MAAAA,WAAW,CAACI,IAAI,CAACI,IAAN,CAAX;AACH;AACD,GALQ,EAKN,CAACJ,IAAD,EAAOL,YAAP,EAAqBC,WAArB,CALM,CAAT;AAOC,sBAEI;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA,eACCI,IAAI,iBACL;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEI;AAAM,QAAA,SAAS,EAAC,aAAhB;AAA8B,QAAA,QAAQ,EAAEN,UAAxC;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACI,UAAA,EAAE,EAAC,WADP;AAEI,UAAA,IAAI,EAAC,MAFT;AAGI,UAAA,QAAQ,MAHZ;AAII,UAAA,KAAK,EAAEM,IAAI,CAACG,KAJhB;AAKI,UAAA,QAAQ,EAAGE,CAAD,IAAOV,YAAY,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV;AALjC;AAAA;AAAA;AAAA;AAAA,gBAFJ,eASI;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ,eAUI;AACI,UAAA,EAAE,EAAC,UADP;AAEI,UAAA,QAAQ,MAFZ;AAGI,UAAA,KAAK,EAAEP,IAAI,CAACI,IAHhB;AAII,UAAA,QAAQ,EAAGC,CAAD,IAAOT,WAAW,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV;AAJhC;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAgBI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,oBAFA,EAyBI,CAACP,IAAD,iBACA;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA,oBA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAqCH,CAnDD;;GAAMP,Q;UAIWF,S;;;KAJXE,Q;AAqDN,eAAeA,QAAf","sourcesContent":["import { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\"\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst EditPost = ({\r\n    handleEdit, setEditTitle, setEditBody, posts, edit\r\n}) => {\r\n\r\n    const {id} = useParams();\r\n    const post = posts.find(post => (post.id).toString() === id );\r\n   \r\n   useEffect(() => {\r\n    if (post) {\r\n        setEditTitle(post.title);\r\n        setEditBody(post.body);\r\n    }\r\n   }, [post, setEditTitle, setEditBody])\r\n   \r\n    return (\r\n         \r\n        <main className=\"NewPost\">\r\n        {post &&\r\n        <>    \r\n        <h2>Edit Post</h2>\r\n            <form className=\"newPostForm\" onSubmit={handleEdit}>\r\n                <label htmlFor=\"postTitle\">Title:</label>\r\n                <input\r\n                    id=\"postTitle\"\r\n                    type=\"text\"\r\n                    required\r\n                    value={post.title}\r\n                    onChange={(e) => setEditTitle(e.target.value)}\r\n                />\r\n                <label htmlFor=\"postBody\">Post:</label>\r\n                <textarea\r\n                    id=\"postBody\"\r\n                    required\r\n                    value={post.body}\r\n                    onChange={(e) => setEditBody(e.target.value)}\r\n                />\r\n                <button type=\"submit\">Submit</button>\r\n            </form>\r\n        \r\n          </> \r\n}\r\n           {!post &&\r\n            <>\r\n                <h2>Post Not Found</h2>\r\n                <p>Well, that's disappointing.</p>\r\n                <p>\r\n                    <Link to='/'>Visit Our Homepage</Link>\r\n                </p>\r\n            </>\r\n        }    </main>\r\n    )\r\n}\r\n\r\nexport default EditPost\r\n"]},"metadata":{},"sourceType":"module"}